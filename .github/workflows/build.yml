name: SonarQube CI/CD avec MongoDB et MySQL
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Analyze, and Test with Databases
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:latest
        options: --health-cmd='curl -s localhost:27017 || exit 1' --health-timeout=3s --health-retries=10 --health-start-period=10s
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: mydatabase
        options: --health-cmd='mysqladmin --user=root --password=rootpassword ping || exit 1' --health-timeout=3s --health-retries=10 --health-start-period=10s
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Les clones superficiels doivent être désactivés pour une meilleure pertinence de l'analyse

      # Étape 1 : Build et lancement de ton conteneur d'application
      - name: Build and run application container
        run: |
          docker build -t my-app .
          docker run -d --name my-app-container my-app

      # Étape 2 : Configurer JDK 17 pour SonarQube
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      # Étape 3 : Cache des packages SonarQube
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Étape 4 : Cache des packages Maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Étape 5 : Analyse SonarQube
      - name: Build and analyze with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          docker exec my-app-container mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=lbaudroit_gestion-tournee-commercial-backend

      # Étape 6 : Arrêter et supprimer les conteneurs
      - name: Stop and remove containers
        run: |
          docker stop my-app-container
          docker rm my-app-container
