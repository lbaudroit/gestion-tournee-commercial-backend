name: SonarQube Analysis with MongoDB and MySQL

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_DATABASE: mydatabase
          MONGO_INITDB_ROOT_PASSWORD: secret
          MONGO_INITDB_ROOT_USERNAME: root
        ports:
          - 27018:27017
        options: >-
          --health-cmd="mongosh --port 27017 --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: mydatabase
          MYSQL_USER: myuser
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: verysecret
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -P 3306 -u root -pverysecret"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: 23
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build with Maven
        env:
          SPRING_DATA_MONGODB_URI: mongodb://root:secret@localhost:27018/mydatabase
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3307/mydatabase
          SPRING_DATASOURCE_USERNAME: myuser
          SPRING_DATASOURCE_PASSWORD: secret
        run: mvn -B clean verify

      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=lbaudroit_gestion-tournee-commercial-backend \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}

      - name: Test Summary
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports
